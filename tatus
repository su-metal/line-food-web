[1mdiff --git a/web/js/http.js b/web/js/http.js[m
[1mindex a582e79..54f9dbe 100644[m
[1m--- a/web/js/http.js[m
[1m+++ b/web/js/http.js[m
[36m@@ -1,48 +1,72 @@[m
 // web/js/http.js[m
[31m-import { CONFIG } from './config.js';[m
[31m-const DEBUG = location.search.includes('debug=1');[m
[32m+[m[32m// LIFF „Åå„Å™„Åè„Å¶„ÇÇÂãï„ÅèÂÆâÂÖ®Áâà„ÄÇLIFF „Åå„ÅÇ„Çå„Å∞ ID „Éà„Éº„ÇØ„É≥„Çí‰ªò‰∏é„Åó„Åæ„Åô„ÄÇ[m
 [m
[31m-function isExpired(idToken, skewSec = 30) {[m
[32m+[m[32mconst API_BASE = ""; // Âêå‰∏Ä„Ç™„É™„Ç∏„É≥„ÄÇÂà•„Éâ„É°„Ç§„É≥„Å´„Åó„Åü„ÅÑ„Å™„Çâ„Åì„Åì„ÇíË®≠ÂÆö[m
[32m+[m
[32m+[m[32mconst isFormData = (b) =>[m
[32m+[m[32m  typeof FormData !== "undefined" && b instanceof FormData;[m
[32m+[m
[32m+[m[32mconst hasLIFF = () =>[m
[32m+[m[32m  typeof window !== "undefined" && typeof window.liff !== "undefined";[m
[32m+[m
[32m+[m[32m/** LIFF „Åå„ÅÇ„Çå„Å∞ ID „Éà„Éº„ÇØ„É≥„ÇíËøî„Åô„ÄÇ„Å™„Åë„Çå„Å∞ null */[m
[32m+[m[32mexport async function ensureIdToken() {[m
[32m+[m[32m  if (!hasLIFF()) return null;[m
   try {[m
[31m-    const p = idToken.split('.')[1];[m
[31m-    const s = p.replace(/-/g,'+').replace(/_/g,'/');[m
[31m-    const pad = s.length % 4 ? '='.repeat(4 - (s.length % 4)) : '';[m
[31m-    const payload = JSON.parse(atob(s + pad));[m
[31m-    const now = Math.floor(Date.now()/1000);[m
[31m-    return typeof payload.exp === 'number' ? (payload.exp - skewSec) <= now : true;[m
[31m-  } catch { return true; }[m
[32m+[m[32m    // liff.ready „ÇíÂæÖ„Å§ÔºàÂ§±Êïó„Åó„Å¶„ÇÇÁÑ°Ë¶ñÔºâ[m
[32m+[m[32m    await window.liff.ready.catch(() => {});[m
[32m+[m[32m    // „Ç¢„Éó„É™ÂÜÖ or „É≠„Ç∞„Ç§„É≥Ê∏à„Åø„Å™„Çâ ID „Éà„Éº„ÇØ„É≥ÂèñÂæó„ÇíË©¶„Åô[m
[32m+[m[32m    if (window.liff.isInClient?.() || window.liff.isLoggedIn?.()) {[m
[32m+[m[32m      return window.liff.getIDToken?.() || null;[m
[32m+[m[32m    }[m
[32m+[m[32m  } catch {}[m
[32m+[m[32m  return null;[m
 }[m
 [m
[31m-export async function ensureIdToken() {[m
[31m-  await liff.ready;[m
[31m-  if (!liff.isLoggedIn()) {[m
[31m-    if (DEBUG) console.debug('[liff] not logged in ‚Üí login');[m
[31m-    await liff.login();[m
[31m-    return null;[m
[32m+[m[32m/** ÂÖ±ÈÄö fetchÔºàÂøÖË¶Å„Å™„Çâ Authorization „Çí‰ªò‰∏éÔºâ */[m
[32m+[m[32mexport async function apiFetch(path, opts = {}) {[m
[32m+[m[32m  const { headers = {}, body, ...rest } = opts;[m
[32m+[m[32m  const h = new Headers(headers);[m
[32m+[m
[32m+[m[32m  // Êó¢ÂÆö„Éò„ÉÉ„ÉÄ[m
[32m+[m[32m  if (!h.has("Accept")) h.set("Accept", "application/json");[m
[32m+[m[32m  // JSON ÈÄÅ‰ø°ÊôÇ„ÅÆ„Åø Content-Type „ÇíËá™Âãï‰ªò‰∏éÔºàFormData „Å´„ÅØ‰ªò„Åë„Å™„ÅÑÔºâ[m
[32m+[m[32m  if (body && !isFormData(body) && !h.has("Content-Type")) {[m
[32m+[m[32m    h.set("Content-Type", "application/json");[m
   }[m
[31m-  let tok = liff.getIDToken();[m
[31m-  if (!tok || isExpired(tok)) {[m
[31m-    if (DEBUG) console.debug('[liff] token missing/expired ‚Üí re-login');[m
[31m-    liff.logout();[m
[31m-    await liff.login(); // „Åì„Åì„Åß„É™„ÉÄ„Ç§„É¨„ÇØ„Éà ‚Üí Âæ©Â∏∞Âæå„ÅØÊñ∞„Éà„Éº„ÇØ„É≥[m
[31m-    return null;[m
[32m+[m
[32m+[m[32m  // LIFF „Åå„ÅÇ„Çå„Å∞ ID „Éà„Éº„ÇØ„É≥„Çí‰ªò‰∏éÔºà„Å™„Åë„Çå„Å∞‰ªò„Åë„Å™„ÅÑÔºùÂÖ¨ÈñãAPIÊÉ≥ÂÆöÔºâ[m
[32m+[m[32m  const idToken = await ensureIdToken();[m
[32m+[m[32m  if (idToken) h.set("Authorization", `Bearer ${idToken}`);[m
[32m+[m
[32m+[m[32m  const res = await fetch(API_BASE + path, { ...rest, headers: h, body });[m
[32m+[m
[32m+[m[32m  if (!res.ok) {[m
[32m+[m[32m    const text = await res.text().catch(() => "");[m
[32m+[m[32m    const err = new Error(`HTTP ${res.status}`);[m
[32m+[m[32m    err.status = res.status;[m
[32m+[m[32m    err.body = text;[m
[32m+[m[32m    throw err;[m
   }[m
[31m-  return tok;[m
[32m+[m[32m  return res;[m
 }[m
 [m
[31m-export async function apiFetch(path, init = {}) {[m
[31m-  const tok = await ensureIdToken();[m
[31m-  const headers = new Headers(init.headers || {});[m
[31m-  if (tok) headers.set('Authorization', `Bearer ${tok}`);[m
[31m-  const res = await fetch(`${CONFIG.API_BASE}${path}`, { ...init, headers, credentials:'include' });[m
[31m-  if (DEBUG) console.debug('[RES]', res.status, path);[m
[31m-  return res;[m
[32m+[m[32m/** JSON „Éò„É´„Éë„Éº */[m
[32m+[m[32mexport async function apiJSON(path, opts) {[m
[32m+[m[32m  const res = await apiFetch(path, opts);[m
[32m+[m[32m  const text = await res.text(); // Á©∫„Éú„Éá„Ç£ÂØæÁ≠ñ[m
[32m+[m[32m  if (!text) return null;[m
[32m+[m[32m  try {[m
[32m+[m[32m    return JSON.parse(text);[m
[32m+[m[32m  } catch {[m
[32m+[m[32m    const err = new Error("Invalid JSON");[m
[32m+[m[32m    err.body = text;[m
[32m+[m[32m    throw err;[m
[32m+[m[32m  }[m
 }[m
 [m
[31m-export async function apiJSON(path, init = {}) {[m
[31m-  const r = await apiFetch(path, init);[m
[31m-  const t = await r.text();[m
[31m-  let j; try { j = t ? JSON.parse(t) : {}; } catch { j = { ok:false, error:'Invalid JSON', raw:t }; }[m
[31m-  if (!r.ok) throw Object.assign(new Error(j.error || r.statusText), { status:r.status, body:j });[m
[31m-  return j;[m
[32m+[m[32m/** „ÉÜ„Ç≠„Çπ„Éà„Éò„É´„Éë„Éº */[m
[32m+[m[32mexport async function apiText(path, opts) {[m
[32m+[m[32m  const res = await apiFetch(path, opts);[m
[32m+[m[32m  return res.text();[m
 }[m
